Function(recurse)
Call(print_int, [p0], x0)
LoadIntConst(10, x2)
Call(>, [p1,x2], x3)
CondJump(x3, .Lrecurse_0, .Lrecurse_2)
Label(.Lrecurse_0)
Copy(p0, x1)
Jump(.Lrecurse_1)
Label(.Lrecurse_2)
LoadIntConst(2, x4)
Call(*, [x4,p0], x5)
LoadIntConst(1, x6)
Call(+, [p1,x6], x7)
Call(recurse, [x5,x7], x8)
Copy(x8, x1)
Label(.Lrecurse_1)
Return(x1)

Function(main)
LoadIntConst(5, x0)
LoadIntConst(0, x1)
Call(recurse, [x0,x1], x2)
Call(print_int, [x2], x3)
Return(U)
