// name "Pointer to int and dereference"

var x = 1234;
var y = &x;

print_int(*y);
// expect 1234

//===

// name "Assign to pointer dereference"

var x = 4321;
var y = &x;
*y = 1234;
print_int(x);
// expect 1234

//===

// name "Pointers example"

fun square(p: Int*): Unit {
    *p = *p * *p;
}

var x: Int = 3;
square(&x);
print_int(x); // Prints 9
// expect 9

//===

// name "Function pointers"

fun double(x: Int): Int { 2 * x };

var fp = &double;

var f = *fp;

print_int(double(2));
// expect 4

print_int(f(2));
// expect 4

//===

// name "Function pointer returned from function"

fun make_forty_two(): Int { 42 }

fun ret_ptr(): (() => Int)* {
  &make_forty_two
}

var ptr = ret_ptr();

print_int((*ptr)());
// expect 42
